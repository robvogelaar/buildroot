From e3b7a967566fd975d2239852cd43c7fd17c0a4d9 Mon Sep 17 00:00:00 2001
From: Andre McCurdy <armccurdy@gmail.com>
Date: Thu, 12 Nov 2015 15:40:00 -0800
Subject: [PATCH] nexus/build/os/linuxkernel/os_flags.inc: add
 NEXUS_KERNEL_CFLAGS to NEXUS_CFLAGS

Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
---
 nexus/build/os/linuxkernel/os_flags.inc | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/nexus/build/os/linuxkernel/os_flags.inc b/nexus/build/os/linuxkernel/os_flags.inc
index 244fd10..4f53983 100644
--- a/nexus/build/os/linuxkernel/os_flags.inc
+++ b/nexus/build/os/linuxkernel/os_flags.inc
@@ -167,6 +167,15 @@ NEXUS_KERNEL_CFLAGS += \
         -I$(LINUX)/include/uapi\
         -I$(LINUX)/include/generated/uapi
 
+# When building with NEXUS_MODE = "proxy", it seems that some compiler command
+# lines include both NEXUS_CFLAGS and NEXUS_KERNEL_CFLAGS, but some include
+# NEXUS_CFLAGS only. Not including the kernel include paths means either that
+# kernel headers are not found (ie build failures) or that libc headers may get
+# used instead (ie build succeeds, but unpredictable results at run time...).
+# Unconditionally adding NEXUS_KERNEL_CFLAGS to NEXUS_CFLAGS here is a
+# workaround, but this needs more investigation and maybe a better solution.
+NEXUS_CFLAGS += $(NEXUS_KERNEL_CFLAGS)
+
 NEXUS_CFLAGS+=  -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -fno-dwarf2-cfi-asm -mabi=aapcs-linux -mno-thumb-interwork -funwind-tables -marm -D__LINUX_ARM_ARCH__=7 -march=armv7-a -Uarm -fno-stack-protector -fomit-frame-pointer -femit-struct-debug-baseonly -fno-var-tracking -Wdeclaration-after-statement -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -Wno-unused-but-set-variable
 # We are using -mfpu=vfpv3-d16 to force off generation of NEON instructions for fixed point code, when compiler comes with default -mfpu=neon-vfpv4
 NEXUS_CFLAGS += -msoft-float -mfloat-abi=softfp -mfpu=vfpv3-d16
-- 
1.9.1

